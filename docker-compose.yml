version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://healthcare_user:healthcare_pass@db:5432/healthcare_chatbot
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - ./logs:/app/logs
    networks:
      - healthcare-network
    restart: unless-stopped

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: healthcare_chatbot
      POSTGRES_USER: healthcare_user
      POSTGRES_PASSWORD: healthcare_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - healthcare-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - healthcare-network
    restart: unless-stopped

  worker:
    build: .
    command: python -c "from alert_system import alert_scheduler; alert_scheduler.start_scheduler(); import time; time.sleep(31536000)"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://healthcare_user:healthcare_pass@db:5432/healthcare_chatbot
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - ./logs:/app/logs
    networks:
      - healthcare-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - healthcare-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  healthcare-network:
    driver: bridge